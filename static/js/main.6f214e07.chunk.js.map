{"version":3,"sources":["actions.js","reducers.js","store.js","components/Header.js","components/TodosForm.js","components/Todo.js","components/Todos.js","App.js","serviceWorker.js","index.js"],"names":["visibilityFilters","SHOW_ALL","COMPLETED","INCOMPLETE","addTodo","todo","type","prevState","rootReducer","combineReducers","todos","state","action","id","Math","random","title","completed","filter","i","length","push","filterTodos","store","createStore","window","STATE_FROM_SERVER","subscribe","console","log","getState","dispatch","connect","props","useState","setTodo","filterTitle","setFilterTitle","handleFilter","onSubmit","e","preventDefault","Alert","error","Grid","Row","Col","md","sm","xs","InputGroup","inside","Input","value","onChange","placeholder","Button","width","height","viewBox","className","fill","xmlns","fillRule","d","appearance","Icon","icon","Dropdown","Item","onSelect","Todo","style","marginTop","textDecoration","onClick","completeTodo","removeTodo","EmptyTodoAlert","Message","showIcon","description","setTodos","useEffect","filteredTodos","map","key","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.6f214e07.chunk.js","sourcesContent":["// action types\r\nexport const ADD_TODO = \"ADD_TODO\";\r\nexport const REMOVE_TODO = \"REMOVE_TODO\";\r\nexport const COMPLETE_TODO = \"COMPELTE_TODO\";\r\n\r\nexport const FILTER_TODOS = 'FILTER_TODOS';\r\n\r\nexport const visibilityFilters = {\r\n  SHOW_ALL: \"SHOW_ALL\",\r\n  COMPLETED: \"COMPLETED\",\r\n  INCOMPLETE: \"INCOMPLETE\",\r\n};\r\n\r\n// action creators\r\nexport function addTodo(todo) {\r\n  return { type: ADD_TODO, todo };\r\n}\r\n\r\nexport function removeTodo(id) {\r\n  return { type: REMOVE_TODO, id };\r\n}\r\n\r\nexport function completeTodo(id) {\r\n  return { type: COMPLETE_TODO, id };\r\n}\r\n\r\nexport function filterTodos(filter) {\r\n  return { type: FILTER_TODOS, filter };\r\n}\r\n","import {\r\n  ADD_TODO,\r\n  REMOVE_TODO,\r\n  COMPLETE_TODO,\r\n  visibilityFilters,\r\n} from \"./actions.js\";\r\n\r\nimport { combineReducers } from \"redux\";\r\nimport { useState } from \"react\";\r\n\r\nfunction todos(state = [], action) {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return [\r\n        ...state,\r\n        { id: Math.random() * 10000000, title: action.todo, completed: false },\r\n      ];\r\n\r\n    case REMOVE_TODO:\r\n      return state.filter((todo) => todo.id !== action.id);\r\n\r\n    case COMPLETE_TODO:\r\n      let todos = [];\r\n      for (let i = 0; i < state.length; i++) {\r\n        let todo = state[i];\r\n        todos.push(todo);\r\n        if (todos[i].id === action.id) {\r\n          todos[i].completed = !todos[i].completed;\r\n        }\r\n      }\r\n      return todos;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nlet prevState = visibilityFilters.SHOW_ALL;\r\n\r\nfunction filterTodos(state = prevState, action) {\r\n  switch (action.filter) {\r\n    case visibilityFilters.SHOW_ALL:\r\n      prevState = visibilityFilters.SHOW_ALL;\r\n      return visibilityFilters.SHOW_ALL;\r\n\r\n    case visibilityFilters.COMPLETED:\r\n      prevState = visibilityFilters.COMPLETED;\r\n      return visibilityFilters.COMPLETED;\r\n\r\n    case visibilityFilters.INCOMPLETE:\r\n      prevState = visibilityFilters.INCOMPLETE;\r\n      return visibilityFilters.INCOMPLETE;\r\n\r\n    default:\r\n      return prevState;\r\n  }\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n  todos,\r\n  filterTodos,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nimport { addTodo } from \"./actions.js\";\r\n\r\nexport const store = createStore(rootReducer, window.STATE_FROM_SERVER);\r\n\r\nconst unsubscribe = store.subscribe(() =>\r\n  console.log(\"store\", store.getState())\r\n);\r\n\r\nstore.dispatch(addTodo(\"Learn redux\"));\r\nstore.dispatch(addTodo(\"Learn redux\"));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <header>\r\n      <h1>Todo App</h1>\r\n    </header>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  todos: state.todos,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTodo, filterTodos, visibilityFilters } from \"../actions.js\";\r\nimport {\r\n  Alert,\r\n  Dropdown,\r\n  Icon,\r\n  Button,\r\n  InputGroup,\r\n  Input,\r\n  Grid,\r\n  Row,\r\n  Col,\r\n} from \"rsuite\";\r\n\r\nfunction TodosForm(props) {\r\n  const [todo, setTodo] = useState(\"\");\r\n  const [filterTitle, setFilterTitle] = useState(\"Show All\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (todo === \"\" || todo.length === 0 || !todo) {\r\n      Alert.error(\"Please enter something in the input box\", 3000);\r\n      return;\r\n    }\r\n\r\n    props.addTodo(todo);\r\n    setTodo(\"\");\r\n  };\r\n\r\n  const handleFilter = (filter) => {\r\n    let filterTitle = \"\";\r\n    \r\n    if (filter === visibilityFilters.SHOW_ALL) {\r\n      filterTitle = 'All';\r\n    } else if (filter=== visibilityFilters.COMPLETED) {\r\n      filterTitle = 'Completed'\r\n    } else {\r\n      filterTitle = 'Incomplete'\r\n    }\r\n\r\n    setFilterTitle(filterTitle);\r\n    props.filterTodos(visibilityFilters[filter]);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Grid>\r\n        <Row>\r\n          <Col md=\"16\" sm=\"14\" xs=\"24\">\r\n            <InputGroup inside>\r\n              <Input\r\n                type=\"text\"\r\n                value={todo}\r\n                onChange={(e) => setTodo(e)}\r\n                placeholder=\"Todo\"\r\n              />\r\n              <InputGroup.Button>\r\n                <svg\r\n                  width=\"1em\"\r\n                  height=\"1em\"\r\n                  viewBox=\"0 0 16 16\"\r\n                  className=\"bi bi-clipboard-check\"\r\n                  fill=\"currentColor\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M4 1.5H3a2 2 0 0 0-2 2V14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-1v1h1a1 1 0 0 1 1 1V14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V3.5a1 1 0 0 1 1-1h1v-1z\"\r\n                  />\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M9.5 1h-3a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-1a.5.5 0 0 0-.5-.5zm-3-1A1.5 1.5 0 0 0 5 1.5v1A1.5 1.5 0 0 0 6.5 4h3A1.5 1.5 0 0 0 11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3zm4.354 7.146a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 1 1 .708-.708L7.5 9.793l2.646-2.647a.5.5 0 0 1 .708 0z\"\r\n                  />\r\n                </svg>\r\n              </InputGroup.Button>\r\n            </InputGroup>\r\n          </Col>\r\n          <Col md=\"4\" sm=\"4\" xs=\"24\">\r\n            <Button appearance=\"primary\">\r\n              <Icon icon=\"plus\" /> Add\r\n            </Button>\r\n          </Col>\r\n          <Col md=\"4\" sm=\"6\" xs=\"24\">\r\n            <Dropdown\r\n              title={filterTitle}\r\n              icon={<Icon icon=\"filter\" />}\r\n              appearance=\"subtle\"\r\n            >\r\n              <Dropdown.Item\r\n                icon={<Icon icon=\"globe\" />}\r\n                onSelect={() => handleFilter(visibilityFilters.SHOW_ALL)}\r\n              >\r\n                Show All\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                icon={<Icon icon=\"check\" />}\r\n                onSelect={() => handleFilter(visibilityFilters.COMPLETED)}\r\n              >\r\n                Show Completed\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                icon={<Icon icon=\"close\" />}\r\n                onSelect={() => handleFilter(visibilityFilters.INCOMPLETE)}\r\n              >\r\n                Show Incomplete\r\n              </Dropdown.Item>\r\n            </Dropdown>\r\n          </Col>\r\n        </Row>\r\n      </Grid>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  filterTodos: (filter) => dispatch(filterTodos(filter)),\r\n  addTodo: (todo) => dispatch(addTodo(todo)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(TodosForm);\r\n","import React from \"react\";\r\nimport { Button, Grid, Row, Col, Icon } from \"rsuite\";\r\n\r\nfunction Todo(props) {\r\n  return (\r\n    <Grid style={{ marginTop: \"2rem\" }}>\r\n      <Row>\r\n        <Col md=\"20\" sm=\"20\" xs=\"18\">\r\n          <p\r\n            style={{\r\n              textDecoration:\r\n                props.todo.completed === true ? \"line-through\" : \"none\",\r\n            }}\r\n          >\r\n            {props.todo.title}\r\n          </p>\r\n        </Col>\r\n        <Col md=\"2\" sm=\"2\" xs=\"1\">\r\n          <Button\r\n            appearance=\"subtle\"\r\n            onClick={() => props.completeTodo(props.todo.id)}\r\n          >\r\n            <Icon icon=\"check\" />\r\n          </Button>\r\n        </Col>\r\n        <Col md=\"2\" sm=\"2\" xs=\"1\">\r\n          <Button\r\n            appearance=\"subtle\"\r\n            onClick={() => props.removeTodo(props.todo.id)}\r\n          >\r\n            <Icon icon=\"close\" />\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { removeTodo, completeTodo, visibilityFilters } from \"../actions.js\";\r\n\r\nimport Todo from \"./Todo\";\r\nimport { Message } from \"rsuite\";\r\n\r\nconst EmptyTodoAlert = () => {\r\n  return (\r\n    <>\r\n      <Message\r\n        style={{ marginTop: \"3rem\" }}\r\n        showIcon\r\n        type=\"error\"\r\n        title=\"No todos to show!\"\r\n        description=\"Start typing in the input box above to add some todos!!\"\r\n      />\r\n      ;\r\n    </>\r\n  );\r\n};\r\n\r\nfunction Todos(props) {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let filteredTodos = [];\r\n\r\n    switch (props.filterTodos) {\r\n      case visibilityFilters.SHOW_ALL:\r\n        filteredTodos = props.todos;\r\n        break;\r\n\r\n      case visibilityFilters.COMPLETED:\r\n        filteredTodos = props.todos.filter((todo) => todo.completed === true);\r\n        break;\r\n\r\n      case visibilityFilters.INCOMPLETE:\r\n        filteredTodos = props.todos.filter((todo) => todo.completed === false);\r\n        break;\r\n\r\n      default:\r\n        filteredTodos = [];\r\n    }\r\n\r\n    setTodos(filteredTodos);\r\n  }, [props.filterTodos, props.todos]);\r\n\r\n  if (props.todos.length === 0 || !props.todos) {\r\n    return <EmptyTodoAlert />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"todos\">\r\n      {todos.map((todo) => (\r\n        <Todo\r\n          todo={todo}\r\n          key={todo.id}\r\n          completeTodo={props.completeTodo}\r\n          removeTodo={props.removeTodo}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  todos: state.todos,\r\n  filterTodos: state.filterTodos,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  removeTodo: (id) => dispatch(removeTodo(id)),\r\n  completeTodo: (id) => dispatch(completeTodo(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);\r\n","import React from \"react\";\nimport { store } from \"./store\";\nimport { Provider } from \"react-redux\";\n\nimport \"rsuite/dist/styles/rsuite-default.css\";\n// import App components here\nimport Header from \"./components/Header\";\nimport TodosForm from \"./components/TodosForm\";\nimport Todos from \"./components/Todos\";\n\nimport \"./App.css\";\n\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <div className=\"container\">\n        <Header />\n        <TodosForm />\n        <Todos />\n      </div>\n    </Provider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}